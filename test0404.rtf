Cos'è Una classe? A che serve il self?
la classe è alla base dell 'oop da cui vengono creati gli oggetti. Posso avere una sola classe ma infiniti oggetti. Definita in Python con class e nome della classe che abbiamo scelto, rigorosamente deve iniziare  con lettera maiuscola perchè si deve differenziare dalle variabili.
Il self serve per richiamare la classe stessa cioè l'oggetto che è stato creato a partire da quella classe.


Cos'è una collezione/aggregazione? Quali sono quelle che conosci? come si differenziano?

fanno parte dei tipi di dato non basilare e sono le liste le tuple gli insiemi.
le liste sono dei tipi di dato che si presentano in python con nome della lista uguale e parentesi quadre all'interno posso trovare diversi tipi di dati come numeri e stringhe  con cui posso richiamare dei metodi mettendo il punto dopo il nome della lista con due parentesi tonde .  Abbiamo di diversi di metodi come append dove aggiunge alla fine della lista il nostro valore inserito all interno delle tonde.
le tuple sono come le liste ma con una differenza non possono essere modificate. In python le rappresento con nome variabile usguale parentesi tonde.
Gli insiemi invece sono una collezione di oggetti non ordinata e si definiscono in python con set=({})


Quali sono le tre regole fondamentali? Cosa fanno?
(1 punto)
le principali regole dellopp sono incaspulamento, ereditarietà polimorfismo con regola madre l'astrazione . Simbolo di questa regola in python è la funziona print. Astrazione noi al usiamo ma non vedimao il codice che sta dietro al funzionamento della funzione print. Incaspulamentola parte del codice dopo uguale viene isolato .  Ereditarieta partendo da due addendi ne genera uno nuovo e crea un legame di gerchia fra padre e figlio. Polimorfismo capacità di cambiare forma o comportamento di un elementocome il + che puo essere sia la somma fra numeri o può unire due stringhe .


Cosa sono le funzioni ? Perché incarnano passivamente il concetto di astrazione? Cos'è l'astrazione nella programmazione ?
(1 punto)
le funzioni sono blocchi  di codice autonomi che funzionano per un motivo specifico  e non ha bisogno di elementi laterali e viene isolata dall indettazione .Simbolo di questa regola in python è la funziona print. Astrazione noi al usiamo ma non vedimao il codice che sta dietro al funzionamento della funzione print. Incaspulamentola parte del codice dopo uguale viene isolato .  Ereditarieta partendo da due addendi ne genera uno nuovo e crea un legame di gerchia fra padre e figlio. Polimorfismo capacità di cambiare forma o comportamento di un elementocome il + che puo essere sia la somma fra numeri o può unire due stringhe .




6.Cos'è il concetto di controllo di flusso? Quali famiglie ne fanno parte? Spiega gli elementi di queste famiglie teoricamente 
(1 punto)
il conecetto di controllo di flusso e verificare le condizioni da noi sclete o che ci servono per far funzionare il nostro programma.e sono if elif else. Posso avere un solo if che mi verifica la consizione iniziale  inficiti elif che controllano le latre condizioni da noi scelte ed un else alla fine per terminare ed il match che lo usiamo appunto quando abbiamo infiniti elif che ci sonsente di confrontare diverse situazione come se fossero organizzate in un menu. Simile allo switch in altri linguaggi. 


Andare a creare una funzioni che si occupi di salvare i dati dell'utente, andare a creare una funzione che si occupi di fare il login dell'utente, Andare a creare un funzioni che modifichi i dati dell'utente solo se questi sono già stati creati  / salvati e solo dopo il login.  Andare a creare un menu che concateni le tre funzioni precedenti e permetta di ripetere il ciclo a più utenti diversi.
(1 punto


EXTRA: Quali sono i principi non tecnici di Python che hai appresso?

la facilità rispetto ad altri linguaggi di essere letto e quindi usato anche da programmatori non esperti . la minore complessità rispetto ad altri linguaggi conme java di riuscire a capire argomenti complessi e metterli in pratica .
